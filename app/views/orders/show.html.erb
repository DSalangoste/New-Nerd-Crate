<div class="container mx-auto px-4 py-8">
  <h1 class="text-2xl font-bold mb-4">Complete Your Order</h1>

  <div class="bg-white shadow-md rounded px-8 pt-6 pb-8 mb-4">
    <div class="mb-4">
      <h2 class="text-xl font-semibold mb-2">Order Summary</h2>
      <p>Total: $<%= @order.total %></p>
    </div>

    <div class="mb-4">
      <h2 class="text-xl font-semibold mb-2">Payment Details</h2>
      <form id="payment-form">
        <div id="payment-element" class="mb-4">
          <!-- Stripe Elements will insert the payment form here -->
        </div>
        <button id="submit" class="bg-blue-500 text-white px-4 py-2 rounded">
          Pay Now
        </button>
        <div id="error-message" class="text-red-500 mt-2"></div>
      </form>
    </div>
  </div>
</div>

<%= content_for :head do %>
  <script src="https://js.stripe.com/v3/"></script>
<% end %>

<%= javascript_tag do %>
  document.addEventListener('DOMContentLoaded', function() {
    const stripe = Stripe('<%= Rails.configuration.stripe[:publishable_key] %>');
    let elements;

    initialize();
    checkStatus();

    document
      .querySelector("#payment-form")
      .addEventListener("submit", handleSubmit);

    async function initialize() {
      const response = await fetch("/orders/<%= @order.id %>/payment", {
        method: "POST",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify({ order_id: <%= @order.id %> })
      });
      const { clientSecret } = await response.json();

      const appearance = {
        theme: 'stripe'
      };
      elements = stripe.elements({ appearance, clientSecret });

      const paymentElement = elements.create("payment");
      paymentElement.mount("#payment-element");
    }

    async function handleSubmit(e) {
      e.preventDefault();
      setLoading(true);

      const { error } = await stripe.confirmPayment({
        elements,
        confirmParams: {
          return_url: "<%= order_url(@order) %>",
        },
      });

      if (error) {
        const messageDiv = document.querySelector("#error-message");
        messageDiv.textContent = error.message;
      }

      setLoading(false);
    }

    function checkStatus() {
      const clientSecret = new URLSearchParams(window.location.search).get(
        "payment_intent_client_secret"
      );

      if (!clientSecret) {
        return;
      }

      stripe.retrievePaymentIntent(clientSecret).then(({ paymentIntent }) => {
        switch (paymentIntent.status) {
          case "succeeded":
            window.location.href = "/orders/<%= @order.id %>/confirmation";
            break;
          case "processing":
            showMessage("Your payment is processing.");
            break;
          case "requires_payment_method":
            showMessage("Your payment was not successful, please try again.");
            break;
          default:
            showMessage("Something went wrong.");
            break;
        }
      });
    }

    function setLoading(isLoading) {
      const submitButton = document.querySelector("#submit");
      submitButton.disabled = isLoading;
      submitButton.textContent = isLoading ? "Processing..." : "Pay Now";
    }

    function showMessage(messageText) {
      const messageDiv = document.querySelector("#error-message");
      messageDiv.textContent = messageText;
    }
  });
<% end %> 